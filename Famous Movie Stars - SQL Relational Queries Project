/* This project is creating tables about famous movie stars and creating more tables about things they do and joining those to create nice human readable lists. */

--Table about famous movie stars and year they were born.

CREATE TABLE moviestars (id INTEGER PRIMARY KEY AUTOINCREMENT, fullname TEXT, birthyear TEXT);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Robert Downey Jr", 1965);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Tom Holland", 1996);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Zendaya", 1996);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Anne Hatheway", 1982);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Emma Watson", 1990);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Channing Tatum", 1980);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Denzel Washington", 1954);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Morgan Freeman", 1937);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Mila Kunis", 1983);

INSERT INTO moviestars (fullname, birthyear) VALUES ("Ashton Kutcher", 1978);

--Creating table of some of the movies that the actors above starred in and the year they were released. 
CREATE TABLE movies (id INTEGER PRIMARY KEY AUTOINCREMENT, movie_title TEXT, year_released INTEGER);

INSERT INTO movies (movie_title, year_released) VALUES ("Iron Man", 2008);

INSERT INTO movies (movie_title, year_released) VALUES ("Iron Man 2", 2010);

INSERT INTO movies (movie_title, year_released) VALUES ("Iron Man 3", 2013);

INSERT INTO movies (movie_title, year_released) VALUES ("The Avengers", 2012);

INSERT INTO movies (movie_title, year_released) VALUES ("Avengers: Age of Ultron", 2015);

INSERT INTO movies (movie_title, year_released) VALUES ("Avengers: Endgame", 2019);

INSERT INTO movies (movie_title, year_released) VALUES ("Avengers: Infity War", 2018);

INSERT INTO movies (movie_title, year_released) VALUES ("Spider-Man: Far From Home", 2019);

INSERT INTO movies (movie_title, year_released) VALUES ("Uncharted", 2022);

INSERT INTO movies (movie_title, year_released) VALUES ("Spider-Man: Homecoming", 2017);

INSERT INTO movies (movie_title, year_released) VALUES ("The Greatest Showman", 2013);

INSERT INTO movies (movie_title, year_released) VALUES ("The Intern", 2015);

INSERT INTO movies (movie_title, year_released) VALUES ("The Devil Wears Prada", 2006);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Philospher's Stone", 2001);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Chamber of Secrets", 2002);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Prisoner of Azkaban", 2004);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Goblet of Fire", 2005);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Order of the Phoenix", 2007);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Half-Blood Prince", 2009);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Deadly Hallows - Part 1", 2010);

INSERT INTO movies (movie_title, year_released) VALUES ("Harry Potter and the Deadly Hallows - Part 2", 2011);

INSERT INTO movies (movie_title, year_released) VALUES ("She's the Man", 2006);

INSERT INTO movies (movie_title, year_released) VALUES ("21 Jump Street", 2011);

INSERT INTO movies (movie_title, year_released) VALUES ("22 Jump Street", 2014);

INSERT INTO movies (movie_title, year_released) VALUES ("Remember the Titans", 2000);

INSERT INTO movies (movie_title, year_released) VALUES ("American Gangster", 2007);

INSERT INTO movies (movie_title, year_released) VALUES ("Flight", 2012);

INSERT INTO movies (movie_title, year_released) VALUES ("Now You See Me", 2013);

INSERT INTO movies (movie_title, year_released) VALUES ("Lucy", 2014);

INSERT INTO movies (movie_title, year_released) VALUES ("Black Swan", 2010);

INSERT INTO movies (movie_title, year_released) VALUES ("Bad Moms", 2016);

INSERT INTO movies (movie_title, year_released) VALUES ("The Butterfly Effect", 2004);

INSERT INTO movies (movie_title, year_released) VALUES ("Jobs", 2013);

INSERT INTO movies (movie_title, year_released) VALUES ("Jupiter Ascending", 2015);

INSERT INTO movies (movie_title, year_released) VALUES ("Glory", 1989);

INSERT INTO movies (movie_title, year_released) VALUES ("The Pelican Brief", 1993);

--Create table showing which actors are married to each other 
CREATE TABLE married (id INTEGER PRIMARY KEY AUTOINCREMENT, spouse1_id INTEGER, spouse2_id INTEGER);

INSERT INTO married (spouse1_id, spouse2_id) VALUES (9, 10);

--Query showing which actors are married to each other
SELECT a.fullname AS spouse1, b.fullname AS spouse2
FROM married
JOIN moviestars a
ON married.spouse1_id = a.id
JOIN moviestars b
ON married.spouse2_id = b.id;

--Creating Table of which of the actors mentioned above costarred together in movies. 
CREATE TABLE costars (id INTEGER PRIMARY KEY AUTOINCREMENT, costar1_id INTEGER, costar2_id INTEGER);

INSERT INTO costars (costar1_id, costar2_id) VALUES (1, 2);

INSERT INTO costars (costar1_id, costar2_id) VALUES (1, 3);

INSERT INTO costars (costar1_id, costar2_id) VALUES (2, 3);

INSERT INTO costars (costar1_id, costar2_id) VALUES (6,9);

INSERT INTO costars (costar1_id, costar2_id) VALUES (7,8);


--Query showing the actors names that costarred together in a list side by side
SELECT a.fullname AS costar_1, b.fullname AS costar_2
    FROM costars
    JOIN moviestars a
    ON costars.costar1_id = a.id
    JOIN moviestars b
    ON costars.costar2_id = b.id;

--Create Table thats tells us what movie each moviestar starred in.
CREATE TABLE moviestars_acted (id INTEGER PRIMARY KEY AUTOINCREMENT, costar1_id INTEGER, costar2_id INTEGER, movietitle_id INTEGER);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (1, 2, 10);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (1, 2, 7);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (1, 2, 6);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (2, 3, 10);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (2, 3, 8);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (1, 3, 10);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (6, 9, 34);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (7, 8, 35);

INSERT INTO moviestars_acted (costar1_id, costar2_id, movietitle_id) VALUES (7, 8, 36);


--Query showing the actors names that costarred together and what movie they costarred in
SELECT a.fullname, b.fullname, c.movie_title
FROM moviestars_acted
JOIN moviestars a
ON moviestars_acted.costar1_id = a.id
JOIN moviestars b
ON moviestars_acted.costar2_id = b.id
JOIN movies c
ON moviestars_acted.movietitle_id = c.id;

--Creating TABLE to list each actor and the movies they starred in
CREATE TABLE movies_acted_in (id INTEGER PRIMARY KEY AUTOINCREMENT, actor_id INTEGER, movietitle_id INTEGER);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 1);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 2);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 3);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 4);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 5);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 6);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (1, 7);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (2, 6);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (2, 7);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (2, 8);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (2, 9);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (2, 10);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (3, 8);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (3, 10);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (3, 11);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (4, 12);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (4, 13);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 14);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 15);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 16);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 17);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 18);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 19);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 20);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (5, 21);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (6, 22);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (6, 23);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (6, 24);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (7, 25);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (7, 26);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (7, 27);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (8, 28);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (8, 29);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (9, 30);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (9, 31);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (10, 32);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (10, 33);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (6, 34);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (9, 34);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (7, 35);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (8, 35);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (7, 36);

INSERT INTO movies_acted_in (actor_id, movietitle_id) VALUES (8, 36);

--Query for a list of each actor and the movie(s) they starred in that is mentioned in the movies_acted_in table that I made
SELECT a.fullname, b.movie_title
FROM movies_acted_in
JOIN moviestars a
ON movies_acted_in.actor_id = a.id
JOIN movies b
ON movies_acted_in.movietitle_id = b.id;

--Query to list the movies in ascending order of release year from the older movies to newer movies
SELECT movie_title, year_released
FROM movies 
ORDER BY year_released asc;

--Query to list the movies in ascending order by alphabetical order 
SELECT movie_title, year_released
FROM movies
ORDER BY movie_title asc;

--Query to list the actors by birth year in descending order by older actor listed first
SELECT fullname, birthyear
FROM moviestars
ORDER BY birthyear asc;

--Query to list the actors in alphabetical order ascending
SELECT fullname, birthyear
FROM moviestars
ORDER BY fullname asc;


